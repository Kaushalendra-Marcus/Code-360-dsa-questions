//  First and Last Position of an Element In Sorted Array
//Problem statement
//You have been given a sorted array/list 'arr' consisting of ‘n’ elements. You are also given an integer ‘k’.
//Now, your task is to find the first and last occurrence of ‘k’ in 'arr'.


// Question Link -- https://www.naukri.com/code360/problems/first-and-last-position-of-an-element-in-sorted-array_1082549?interviewProblemRedirection=true&search=first&attempt_status=COMPLETED

#include<iostream>
#include<vector>
using namespace std;
int firstOcc(vector<int>& arr,int n,int k){
    int s=0;
    int e =n-1;
    int mid=s+(e-s)/2;
    int ans =-1;
    while (s<=e)
    {
        if(arr[mid]==k){
            ans=mid;
            e=mid-1;
        }
        else if(arr[mid]<k){
            s=mid+1;
        }
        else if(arr[mid]>k){
            e=mid-1;
        }
        mid  = s + (e-s)/2;
    }
    return ans;
}
int lastOcc(vector<int>&arr,int n,int k){
    int s=0;
    int e =n-1;
    int mid=s+(e-s)/2;
    int ans =-1;
    while (s<=e)
    {
        if(arr[mid]==k){
            ans=mid;
            s=mid+1;
        }
        else if(arr[mid]<k){
            s=mid+1;
        }
        else if(arr[mid]>k){
            e=mid-1;
        }
        mid  = s + (e-s)/2;
    }
    return ans;
}

pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k) {
    int first = firstOcc(arr, n, k);
    int last = lastOcc(arr, n, k);
    return {first, last};  
}
